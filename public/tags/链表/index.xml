<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>链表 on Jeffrey&#39;s Blog</title>
    <link>/tags/%E9%93%BE%E8%A1%A8/</link>
    <description>Recent content in 链表 on Jeffrey&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 15 Feb 2020 21:23:15 +0800</lastBuildDate>
    
	<atom:link href="/tags/%E9%93%BE%E8%A1%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>链表题汇总</title>
      <link>/2020/02/single-linked-questions/</link>
      <pubDate>Sat, 15 Feb 2020 21:23:15 +0800</pubDate>
      
      <guid>/2020/02/single-linked-questions/</guid>
      <description>链表题汇总 [TOC]
1.反转链表 问题描述  LeetCode: 输入一个链表，反转链表后，输出链表的所有元素。
示例:
输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL
输出: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL
 问题分析 这道算法题，说直白点就是：如何让后一个节点指向前一个节点。下面的代码中定义了一个next节点用来保存反转后的头节点。
Solution 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  /** * Definition for singly-linked list. * public class ListNode { * int val; * ListNode next; * ListNode(int x) { val = x; } * } */ class Solution { public ListNode reverseList(ListNode head) { ListNode next = null; ListNode pre = null; while(head !</description>
    </item>
    
  </channel>
</rss>